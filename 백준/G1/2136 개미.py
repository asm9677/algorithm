"""
문제
길이가 L(2 ≤ L ≤ 1,000,000,000)인 막대기 위에 N(1 ≤ N ≤ 100,000)마리의 개미들이 서로 다른 위치에 살고 있다. 개미들은 크기가 매우 작기 때문에 이 문제에서는 개미가 크기가 없는 점이라고 생각하자. 각각의 개미의 위치는 x좌표로 표시되며, 좌표값은 0보다 크고 L보다 작은 값으로 표현된다.

각각의 개미는 왼쪽, 혹은 오른쪽으로 움직이고 있다. 모든 개미들은 똑같은 속도로, 1초에 한 칸씩 움직인다. 개미들이 움직이는 도중에 서로 부딪히는 경우가 생길 수도 있다. 두 마리의 개미가 서로 부딪혔을 때, 두 마리의 개미는 모두 즉시 방향을 바꾸어 다시 움직이게 된다.

개미들이 이동하다가 0인 위치나 L인 위치에 도달하게 되면, 그 개미는 막대기 아래로 떨어지게 된다. 개미들의 초기상태가 주어졌을 때, 가장 마지막에 떨어지는 개미와 그 개미가 떨어지는 시각을 알아내는 프로그램을 작성하시오.

입력
첫째 줄에 두 정수 N, L이 주어진다. 다음 N개의 줄에는 각 개미의 초기 위치가 주어진다. 초기 위치가 양수로 주어지는 경우는 그 값이 그 개미의 위치가 되며, 그 개미는 오른쪽으로 움직이고 있다. 초기 위치가 음수로 주어지는 경우에는 그 절댓값이 그 개미의 위치가 되며, 그 개미는 왼쪽으로 움직이고 있다. 예를 들어 3이 주어지는 경우에는 3인 위치에서 오른쪽으로 움직이고 있고, -7인 경우에는 7인 위치에서 왼쪽으로 움직이고 있다.

출력
첫째 줄에 두 정수 i, t를 출력한다. i는 가장 마지막에 떨어지는 개미의 번호이다. 개미의 번호는 입력에서 주어지는 순서대로 1, 2, …, N이다. t는 가장 마지막에 떨어지는 개미가 바닥에 떨어지는 시간이다. 가장 마지막에 떨어지는 개미가 여러 마리인 경우는 없다고 가정한다.

예제 입력 1 
2 5
4
-3
예제 출력 1 
2 3

예제 입력 2 
1 10
3
예제 출력 2 
1 7
"""
"""
시간 복잡도: O(NlogN)
L과 N이 각각 10과 4이고 개미의 위치는 1 3 5 -7, 현재 시간을 t라고 했을 때
t = 0일 경우 1 3 5 -7
t = 1일 경우 2 4 -6 6
t = 2일 경우 3 -5 5 7
t = 3일 경우 -4 4 6 8
t = 4일 경우 -3 5 7 9

위와 같이 개미가 충돌했을 경우 서로의 도착 지점에서 부호만 바뀌는 것을 확인할 수 있다.
각 개미의 위치를 x, 가장 마지막에 떨어지는 시간을 t, 가장 마지막에 떨어진 개미의 번호를 i라고 했을 때 
t는 개미의 방향이 오른쪽인 경우 L까지의 거리 또는 개미의 방향의 왼쪽인 경우 0까지의 거리 중 가장 큰 값이라고 할 수 있으며,
i는 위에서 구한 개미가 막대기에 끝으로 이동하는 동안 충돌한 횟수만큼 이동시키면 된다.

이 때, 개미의 위치는 정렬되어 있어야하며 정렬 전 개미의 번호를 알고 있어야한다.
"""
import sys
input = sys.stdin.readline

N,L = map(int, input().split())
pos = sorted([(int(input()),i+1) for i in range(N)], key=lambda x:abs(x[0]))

i,t = 0,0
for idx,(x,_) in enumerate(pos):
    if x > 0 and L-x > t:
        i,t = idx,L-x
    elif x < 0 and -x > t:
        i,t = idx,-x

a,b = (i,N) if pos[i][0] > 0 else (0,i)
k = -1 if pos[i][0] > 0 else 1
for idx in range(a,b):
    if pos[idx][0] * k > 0:
        i-=k
print(pos[i][1],t)